/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ClassesExcluidas;

import JFM.*;
import DAO.AeronaveDAO;
import DAO.PassageiroDAO;
import OverbookPolicy.Aeronave;
import OverbookPolicy.Passageiro;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author pazak
 */
public class JFMVooBackup extends javax.swing.JFrame {

    /**
     * Creates new form JFMVoo
     */
    public JFMVooBackup() {
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) jTPsgDisp.getModel();
        jTPsgDisp.setRowSorter(new TableRowSorter(modelo));
        
        
        readJTablePsg();

        //Lista os Objetos no ComboBox Aeronaves
        AeronaveDAO aD = new AeronaveDAO();
        
        for(Aeronave a: aD.list()){
           cbAeronaves.addItem(a);
        }
    }


    public void readJTablePsg() {
        DefaultTableModel modelo = (DefaultTableModel) jTPsgDisp.getModel();
        modelo.setNumRows(0);

        PassageiroDAO adao = new PassageiroDAO();

        for (Passageiro p : adao.list()) {
            modelo.addRow(new Object[]{
                p.getNome(),
                p.getCategoria()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblListPsgDisp = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPsgDisp = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTPsgEmb = new javax.swing.JTable();
        lblListPsgEmb = new javax.swing.JLabel();
        lblTituloJanela = new javax.swing.JLabel();
        jbAplicarPolitica = new javax.swing.JButton();
        jbMoverUmEsq = new javax.swing.JButton();
        jbMoverVariosDir = new javax.swing.JButton();
        jbMoverVariosEsq = new javax.swing.JButton();
        jbMoverUmDir = new javax.swing.JButton();
        cbAeronaves = new javax.swing.JComboBox<>();
        lblAeronovaModelos = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblEmbarcados = new javax.swing.JLabel();
        lblCapMax = new javax.swing.JLabel();
        jckbVip = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblListPsgDisp.setText("Lista de Passageiros DisponÃ­veis");

        jTPsgDisp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Categoria"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTPsgDisp.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTPsgDisp);
        jTPsgDisp.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTPsgDisp.getColumnModel().getColumnCount() > 0) {
            jTPsgDisp.getColumnModel().getColumn(1).setPreferredWidth(15);
        }

        jTPsgEmb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Categoria", "Poltrona"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTPsgEmb);
        if (jTPsgEmb.getColumnModel().getColumnCount() > 0) {
            jTPsgEmb.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTPsgEmb.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        lblListPsgEmb.setText("Lista de Passageiros Embarcados");

        lblTituloJanela.setText("Embarque de passageiros");

        jbAplicarPolitica.setText("Iniciar Embarque");
        jbAplicarPolitica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAplicarPoliticaActionPerformed(evt);
            }
        });

        jbMoverUmEsq.setText("<");
        jbMoverUmEsq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMoverUmEsqActionPerformed(evt);
            }
        });

        jbMoverVariosDir.setText(">>");
        jbMoverVariosDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMoverVariosDirActionPerformed(evt);
            }
        });

        jbMoverVariosEsq.setText("<<");
        jbMoverVariosEsq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMoverVariosEsqActionPerformed(evt);
            }
        });

        jbMoverUmDir.setText(">");
        jbMoverUmDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMoverUmDirActionPerformed(evt);
            }
        });

        cbAeronaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAeronavesActionPerformed(evt);
            }
        });

        lblAeronovaModelos.setText("Aeronave");

        jLabel1.setText("Embarcados");

        jLabel2.setText("/");

        lblEmbarcados.setText("0");

        lblCapMax.setText("0");

        jckbVip.setText("Policy VIP");
        jckbVip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jckbVipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbMoverUmDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbMoverUmEsq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbMoverVariosDir)
                                    .addComponent(jbMoverVariosEsq)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblListPsgDisp)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblListPsgEmb)
                                .addGap(71, 71, 71)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEmbarcados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCapMax)
                                .addGap(62, 62, 62))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(117, 117, 117)
                                        .addComponent(lblAeronovaModelos, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbAeronaves, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(50, 50, 50))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jckbVip)
                            .addComponent(jbAplicarPolitica)
                            .addComponent(lblTituloJanela))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTituloJanela)
                        .addGap(75, 75, 75)
                        .addComponent(lblListPsgDisp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblListPsgEmb)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbAeronaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAeronovaModelos))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(lblEmbarcados)
                                    .addComponent(lblCapMax)
                                    .addComponent(jLabel1))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jbMoverUmDir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbMoverUmEsq, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbMoverVariosDir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbMoverVariosEsq, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(42, 42, 42)
                .addComponent(jckbVip)
                .addGap(18, 18, 18)
                .addComponent(jbAplicarPolitica)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbMoverVariosEsqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMoverVariosEsqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbMoverVariosEsqActionPerformed

    private void jbMoverUmEsqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMoverUmEsqActionPerformed

        int[] indice = jTPsgEmb.getSelectedRows();
        Object[] row = new Object[2];
        DefaultTableModel model1 = (DefaultTableModel) jTPsgDisp.getModel();
        DefaultTableModel model2 = (DefaultTableModel) jTPsgEmb.getModel();
        for (int i = 0; i < indice.length; i++) {
            row[0] = model2.getValueAt(indice[i], 0);
            row[1] = model2.getValueAt(indice[i], 1);
            model1.addRow(row);
            model2.removeRow(jTPsgEmb.getSelectedRow());
            int mudaLabel = jTPsgEmb.getRowCount();
            lblEmbarcados.setText(Integer.toString(mudaLabel));
        }
    }//GEN-LAST:event_jbMoverUmEsqActionPerformed

    private void jbMoverUmDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMoverUmDirActionPerformed
        //TableModel model1 = jTPsgDisp.getModel();

        int[] indice = jTPsgDisp.getSelectedRows();        
        
        //int mudaLabel = 1+ jTPsgEmb.getRowCount();               
        //lblEmbarcados.setText(Integer.toString(mudaLabel));

        Object[] row = new Object[3];
        DefaultTableModel model1 = (DefaultTableModel) jTPsgDisp.getModel();
        DefaultTableModel model2 = (DefaultTableModel) jTPsgEmb.getModel();

        for (int i = 0; i < indice.length; i++) {
            
            int poltrona = (jTPsgEmb.getRowCount()+1);

            row[0] = model1.getValueAt(indice[i], 0);
            row[1] = model1.getValueAt(indice[i], 1);
            row[2] = poltrona;
            model2.addRow(row);
            model1.removeRow(jTPsgDisp.getSelectedRow());
            
            int mudaLabel = jTPsgEmb.getRowCount();
            lblEmbarcados.setText(Integer.toString(mudaLabel));
            
        }

    }//GEN-LAST:event_jbMoverUmDirActionPerformed

    private void jbMoverVariosDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMoverVariosDirActionPerformed
        int[] indice = jTPsgDisp.getSelectedRows();
        Object[] row = new Object[2];
        DefaultTableModel model1 = (DefaultTableModel) jTPsgDisp.getModel();
        DefaultTableModel model2 = (DefaultTableModel) jTPsgEmb.getModel();
        for (int i = 0; i < indice.length; i++) {
            row[0] = model1.getValueAt(indice[i], 0);
            row[1] = model1.getValueAt(indice[i], 1);
            model2.addRow(row);
            model1.removeRow(i);
        }
    }//GEN-LAST:event_jbMoverVariosDirActionPerformed

    private void cbAeronavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAeronavesActionPerformed
      Aeronave a = (Aeronave) cbAeronaves.getSelectedItem();
      
      lblCapMax.setText(Integer.toString(a.getCapacidade()));
      
      
    }//GEN-LAST:event_cbAeronavesActionPerformed

    private void jckbVipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jckbVipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jckbVipActionPerformed

    private void jbAplicarPoliticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAplicarPoliticaActionPerformed
        int i;
        int capacidade = (Integer.parseInt(lblCapMax.getText()));
       
        ArrayList<OverbookPolicy.Passageiro> listaDeEmbarcados = new ArrayList<>();
        ArrayList<OverbookPolicy.Passageiro> listaDeCancelados = new ArrayList<>();
        Passageiro p = new Passageiro();
        
       for(i =0; i < jTPsgEmb.getRowCount(); i++) {
           p.setNome((String) jTPsgEmb.getValueAt(i, 0));
           p.setCategoria((String) jTPsgEmb.getValueAt(i, 1));
           p.setPoltrona((int) jTPsgEmb.getValueAt(i, 2));
                      
          if (i < capacidade){
              listaDeEmbarcados.add(p); 
              System.out.println(i + " " + listaDeEmbarcados.get(i).getNome());
              
          }else{
              listaDeCancelados.add(p);
              System.out.println("Lista de cancelados " + listaDeCancelados.get(i - capacidade).getNome());
          }                      
        }
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
      
    }//GEN-LAST:event_jbAplicarPoliticaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFMVooBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFMVooBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFMVooBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFMVooBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFMVooBackup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> cbAeronaves;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTPsgDisp;
    private javax.swing.JTable jTPsgEmb;
    private javax.swing.JButton jbAplicarPolitica;
    private javax.swing.JButton jbMoverUmDir;
    private javax.swing.JButton jbMoverUmEsq;
    private javax.swing.JButton jbMoverVariosDir;
    private javax.swing.JButton jbMoverVariosEsq;
    private javax.swing.JCheckBox jckbVip;
    private javax.swing.JLabel lblAeronovaModelos;
    private javax.swing.JLabel lblCapMax;
    private javax.swing.JLabel lblEmbarcados;
    private javax.swing.JLabel lblListPsgDisp;
    private javax.swing.JLabel lblListPsgEmb;
    private javax.swing.JLabel lblTituloJanela;
    // End of variables declaration//GEN-END:variables
}
